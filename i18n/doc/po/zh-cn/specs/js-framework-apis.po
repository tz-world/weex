msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"

#. type: Title #
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:1
#, no-wrap
msgid "JS Framework APIs"
msgstr "js框架的API ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:4
msgid ""
"There APIs is designed for JS Framework and Native Engine working together."
msgstr "有API是专为JS框架和本地引擎一起工作。 ???"

#. type: Title ##
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:5
#, no-wrap
msgid "Called from native and implemented by JS Framework"
msgstr "“从本地和JS框架实现 ???"

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:7
#, no-wrap
msgid "`createInstance(instanceId, code, options, data)`"
msgstr " `createInstance(instanceId, code, options, data)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:10
msgid "Create a Weex instance from Native Engine"
msgstr "创建本地引擎weex实例 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:15
msgid ""
"`instanceId`: The unique id for a Weex instance, generated by Native Engine."
msgstr " `instanceId`：一weex实例的唯一ID，以发动机产生。 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:15
msgid ""
"`code`: The JS bundle code send from Native Engine. It will be executed by "
"`new Function(code)` in JS Framework. The code format depends on [JS Bundle "
"Foramt](js-bundle-format.md)"
msgstr ""
" `code``: The JS bundle code send from Native Engine. It will be executed by "
"``new Function(code)`JS框架。代码的格式取决于[格式](js-bundle-format.md)JS"
"束 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:15
msgid ""
"`options`: *Optional*. An options object. *Currently it supports `debug` "
"flag which enable printing log and `bundleUrl` flag which the url of bundle.*"
msgstr ""
" `options``: *Optional*. An options object. *Currently it supports ``debug`` "
"flag which enable printing log and ``bundleUrl`旗，管束的URL。* ???"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:15
msgid ""
"`data`: *Optional*. It's an chance to supply external data instead of the "
"original data in JS bundle."
msgstr " `data`：*可选*。这是一个机会，提供外部数据而不是JS束原始数据。 ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:17
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:31
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:43
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:69
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:88
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:99
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:114
msgid "Example:"
msgstr "例子: ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:21
msgid ""
"``` createInstance('x', 'define(...); define(...); define(...); "
"bootstrap(...)')  ```"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:22
#, no-wrap
msgid "`destroyInstance(instanceId)`"
msgstr " `destroyInstance(instanceId)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:25
msgid "Destroy an existed Weex instance by id from Native Engine"
msgstr "通过ID从本地引擎破坏存在weex实例 ???"

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:26
#, no-wrap
msgid "`refreshInstance(instanceId, data)`"
msgstr " `refreshInstance(instanceId, data)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:29
msgid ""
"Refresh data to an existed Weex instance with certain external data from "
"Native Engine"
msgstr "刷新数据存在weex实例与原生引擎一定的外部数据 ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:35
msgid "``` refreshInstance('x', {a: 100, b: 200})  ```"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:36
#, no-wrap
msgid "`registerComponents(components)`"
msgstr " `registerComponents(components)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:39
msgid "Register all native components"
msgstr "注册所有的本地组件 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:41
msgid ""
"`components`: A map that the keys are component types and the values are "
"config of each type of component. *Currently it supports any attrubite of "
"node by defualt. For example, the `append` which forces the appending way "
"(`tree` or `node`) when first rendering, but will be overwritten by given "
"the attribute on element in source code.*"
msgstr ""
" `components``: A map that the keys are component types and the values are "
"config of each type of component. *Currently it supports any attrubite of "
"node by defualt. For example, the ``append`` which forces the appending way "
"(``tree`` or ``node`)当第一次渲染，但会覆盖在源代码中的元素的属性。* ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:59
#, no-wrap
msgid ""
"```\n"
"registerComponents({\n"
"  container: {}, \n"
"  text: {\n"
"    style: {\n"
"      color: 'red'\n"
"    }\n"
"  }, \n"
"  image: {},\n"
"  slider: {append: 'tree'},\n"
"  list: {}, \n"
"  cell: {append: 'tree'}, \n"
"  ...\n"
"})\n"
"```\n"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:60
#, no-wrap
msgid "`registerModules(modules)`"
msgstr " `registerModules(modules)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:63
msgid "Register the name, methods and args format of each module"
msgstr "登记的名称、方法和各模块的参数格式 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:65
msgid ""
"`modules`: A map that collects all module definitions. Each module "
"definition is a list which has several API definitions. And each API "
"definition has a `name` string and a `args` array which contains a list of "
"each parameter's type."
msgstr ""
" `modules``: A map that collects all module definitions. Each module "
"definition is a list which has several API definitions. And each API "
"definition has a ``name`` string and a ``args`阵列包含一个列表的每个参数的类"
"型。 ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:67
#, no-wrap
msgid "**NOTE: if the parameter's type is `node` or `function`, then it will automatically transfer to a string of `node reference` or `function id`**\n"
msgstr "*注：如果参数的类型是`node`` or ``function``, then it will automatically transfer to a string of ``node reference`` or ``function id`* * ???\n"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:78
#, no-wrap
msgid ""
"```\n"
"registerModules({\n"
"  event: [\n"
"    {name: 'openURL', args: ['string']}\n"
"  ],\n"
"  ...\n"
"})\n"
"```\n"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:79
#, no-wrap
msgid "`callJS(instanceId, tasks)`"
msgstr " `callJS(instanceId, tasks)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:82
msgid "Fire events or callbacks to an existed Weex instance from Native Engine"
msgstr "火灾事件或回调到一个存在的weex实例从原生引擎 ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:86
#, no-wrap
msgid ""
"* `tasks[]`: A task list. Each task has a `method=\"fireEvent|callback\"` property and a list of `args`.\n"
"    - In `fireEvent` method, the `args` is `ref` of the target, event `type` and event `data` in order.\n"
"    - In `callback` method, the `args` is `funcId` of a handler, `data` and `ifKeepAlive` which describes whether this callback handler should be keeping called. (Each callback handler is matched with a `funcId` when the original call happens.)\n"
msgstr ""
"*`tasks[]``: A task list. Each task has a ``method=\"fireEvent|callback\"`` property and a list of ``args``.\n"
"    - In ``fireEvent`` method, the ``args`` is ``ref`` of the target, event ``type`` and event ``data`` in order.\n"
"    - In ``callback`` method, the ``args`` is ``funcId`` of a handler, ``data`` and ``ifKeepAlive`` which describes whether this callback handler should be keeping called. (Each callback handler is matched with a ``funcId`原来当呼叫发生。) ???\n"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:93
msgid ""
"``` callJS('x', [{method: 'fireEvent', args: ['x', '13', 'click', {a: 100, "
"b: 200}]}])  callJS('x', [{method: 'callback', args: ['x', '7', {a: 100, b: "
"200}, true]}])  ```"
msgstr ""

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:94
#, no-wrap
msgid "`getRoot(instanceId)`"
msgstr " `getRoot(instanceId)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:97
msgid ""
"Return a JSON object which describes the whole virtual DOM body of an "
"existed Weex instance, which designed for debugging"
msgstr ""
"返回一个JSON对象，它描述了一个weex实例存在整个虚拟DOM的身体，调试设计 ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:104
msgid ""
"``` getRoot('x')  // {ref: '_root', type: 'container', attr: {...}, style: "
"{...}, children: [...]} ```"
msgstr ""

#. type: Title ##
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:105
#, no-wrap
msgid "Called from JavaScript and implemented with native code"
msgstr "所谓的JavaScript和原生代码实现 ???"

#. type: Title ###
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:107
#, no-wrap
msgid "`callNative(instanceId, tasks)`"
msgstr " `callNative(instanceId, tasks)`???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:110
msgid "Make native calls from JS Framework"
msgstr "从本地调用JS框架 ???"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:112
msgid ""
"`tasks[]`: A task list. Each task has a `module` name, a `method` name, and "
"a `args[]` list."
msgstr ""
" `tasks[]``: A task list. Each task has a ``module`` name, a ``method`` "
"name, and a ``args[]`列表。 ???"

#. type: Plain text
#: /home/dev/download/weex/doc/specs/js-framework-apis.md:122
#, no-wrap
msgid ""
"```\n"
"callNative('x', [\n"
"  {module: 'dom', method: 'addElement', args: ['_root', {ref: '1', type: 'container'}, -1]},\n"
"  {module: 'dom', method: 'addElement', args: ['1', {ref: '2', type: 'text', ...}, -1]},\n"
"  {module: 'dom', method: 'addElement', args: ['1', {ref: '3', type: 'image', ...}, -1]},\n"
"  ...\n"
"])\n"
"```\n"
msgstr ""