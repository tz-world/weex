msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"

#. type: Title #
#: /home/dev/download/weex/doc/syntax/main.md:1
#, no-wrap
msgid "Syntax"
msgstr "语法"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:4
#, no-wrap
msgid ""
"<span class=\"weex-version\">0.4</span>\n"
"<a href=\"https://github.com/weexteam/article/issues/8\"  class=\"weex-translate\">cn</a>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:7
#, no-wrap
msgid "*The syntax of Weex is deeply inspired from [Vue.js](http://vuejs.org/), an elegant JavaScript framework with component system and reactive data binding.*\n"
msgstr "* weex 的语法体系深受 [Vue.js](http://vuejs.org/) 的启发。 Vue.js 是一个优雅的JavaScript框架，包含了 组件系统 与 数据绑定。*\n"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:9
#, no-wrap
msgid "A simple Weex page sample is just a piece of `<template>` code, a piece of `<style>` code and a piece of `<script>` code. The three parts together describe a whole Weex page.\n"
msgstr "Weex页面页面由`<template>`, `<style>` , `<script>` 三部分构成。\n"

#. type: Bullet: '- '
#: /home/dev/download/weex/doc/syntax/main.md:13
msgid ""
"`<template>`: *required*. Just uses HTML syntax and describes the structure "
"of a Weex page, which is build upon several tags. Each tag means a type of "
"*component*."
msgstr ""
"`<template>` : *必须* , 使用类HTML的语法描述页面结构，内容由多个标签组成，不"
"同的标签代表不同的组件。"

#. type: Bullet: '- '
#: /home/dev/download/weex/doc/syntax/main.md:13
msgid ""
"`<style>`: *optional*. Describes the presetation details, and the content is "
"based on CSS syntax."
msgstr " `<style>` : *可选* , 使用类CSS的语法描述页面的具体展现形式。"

#. type: Bullet: '- '
#: /home/dev/download/weex/doc/syntax/main.md:13
msgid ""
"`<script>`: *optional*. Describes the data and behaiver with JavaScript "
"syntax. It defines data and how these data are processed etc."
msgstr ""
" `<script>`：*可选*。使用JavaScript描述页面中的数据和页面的行为，Weex中的数据"
"定义也在 `<script>` 中进行。"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:18
#, no-wrap
msgid ""
"```html\n"
"<template>\n"
"  <!-- (required) the structure of page -->\n"
"</template>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:22
#, no-wrap
msgid ""
"<style>\n"
"  /* (optional) stylesheet */\n"
"</style>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:27
#, no-wrap
msgid ""
"<script>\n"
"  /* (optional) the definition of data, methods and life-circle */\n"
"</script>\n"
"```\n"
msgstr ""

#. type: Title ##
#: /home/dev/download/weex/doc/syntax/main.md:28
#, no-wrap
msgid "`<template>`"
msgstr " `<template>`"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:31
#, no-wrap
msgid "We describe page structure in `<template>` tag like the following definition:\n"
msgstr "我们在`<template>`中定义了如下的页面结构：\n"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:40
#, no-wrap
msgid ""
"```html\n"
"<template>\n"
"  <container>\n"
"    <image style=\"width: 200; height: 200;\" src=\"http://gtms02.alicdn.com/tps/i2/TB1QHKjMXXXXXadXVXX20ySQVXX-512-512.png\"></image>\n"
"    <text>Alibaba Weex Team</text>\n"
"  </container>\n"
"</template>\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:42
msgid ""
"Here `container` tag is the root element of the component. `image` tag "
"describes a picture, while `text` tag means a paragraph of text."
msgstr ""
"`container` 标签是一个根节点，其下包含描述图片的`image`标签和描述一段文字的 "
"text 标签。"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:44
msgid ""
"Just similar to HTML, each component could have its own attributes, some "
"components also have children as their sub components."
msgstr ""
"和HTML中类似，不同标签代表的元素/组件有各自的属性, 其中一些组件还能有子组件。"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:46
msgid ""
"The root element of template: In a `template` tag, there could be only one "
"root component which has no display logics directive. Here are three types "
"of root component we support now:"
msgstr ""
"根节点: 每个 `template` 标签中的最顶层标签，我们称为根节点。下面是目前我们支"
"持的三种不同的根节点:"

#. type: Bullet: '- '
#: /home/dev/download/weex/doc/syntax/main.md:50
msgid "`<container>`: a common native container"
msgstr " `<container>`：普通根节点"

#. type: Bullet: '- '
#: /home/dev/download/weex/doc/syntax/main.md:50
msgid "`<scroller>`: a native scroll view"
msgstr " `<scroller>`：带有滑动条的根节点，适用于需要全页滚动的场景"

#. type: Bullet: '- '
#: /home/dev/download/weex/doc/syntax/main.md:50
msgid "`<list>`: a native cell-reusable list view"
msgstr " `<list>`：列表(list)根节点， 原生的子元素可以被复用（省内存）"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:52
msgid "Only these type of components are allowed for root element."
msgstr "目前Weex仅支持以上三种根节点"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/syntax/main.md:54
msgid "[See all built-in components](../components/main.md)."
msgstr "[参见 内置组件](../components/main.md)"

#. type: Title ##
#: /home/dev/download/weex/doc/syntax/main.md:55
#, no-wrap
msgid "`<style>`"
msgstr " `<style>`"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:58
msgid ""
"You can consider the Weex style syntax is a subset of the CSS syntax, but "
"there is still some differences."
msgstr "Weex中的样式语法可以理解为CSS的一个子集，当然，两者有一些区别"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:60
#, no-wrap
msgid "First we could write inline `style` attribute in `<template>` element. Second we could use the `class` attribute to apply stylesheets, which are defined with single-class selectors in `<style>` code. Here is an example:\n"
msgstr "首先，在标签上，你可以直接通过内联(inline)的`style`属性编写样式. 其次，我们可以通过标签中的`class`属性与`style`标签中定义的样式建立对应关系，让`style`中定义的样式作用于选定标签上。"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:68
#, no-wrap
msgid ""
"```html\n"
"<template>\n"
"  <container>\n"
"    <text style=\"font-size: 64;\">Alibaba</text>\n"
"    <text class=\"large\">Weex Team</text>\n"
"  </container>\n"
"</template>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:73
#, no-wrap
msgid ""
"<style>\n"
"  .large {font-size: 64;}\n"
"</style>\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:75
msgid ""
"Both the two `text` components above have the same `font-size`, which is "
"`64` pixel."
msgstr "上面的两个text组件都被设置了同样的字体大小 ，64px 。"

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/syntax/main.md:77
msgid "[See common styles in Weex](../references/common-style.md)"
msgstr "[参见 weex公共样式](../references/common-style.md)"

#. type: Title ###
#: /home/dev/download/weex/doc/syntax/main.md:79
#, no-wrap
msgid "Notes!"
msgstr "注意!"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:81
msgid ""
"weex is basically following [HTML attribute](https://en.wikipedia.org/wiki/"
"HTML_attribute) naming rule , so please **do not use CamelCase** in your "
"attribute , **long-name** with “-” as delimiter is much better."
msgstr ""
"weex 遵循 [HTML属性命名规范](https://en.wikipedia.org/wiki/HTML_attribute) , "
"所以属性命名时 **请不要使用陀峰格式(CamelCase)** , 请采用以“-”分割的**long-"
"name**形式."

#. type: Title ##
#: /home/dev/download/weex/doc/syntax/main.md:82
#, no-wrap
msgid "`<script>`"
msgstr "`<script>`"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:85
msgid ""
"The syntax is JavaScript (ES5) and it describes data and behavior of a Weex "
"page. Here we create three paragraphs:"
msgstr ""
"`<script>` 中的代码遵循 JavaScript(ES5)语法. 描述页面中的数据和页面的行为。 "
"下面是一个例子:"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:94
#, no-wrap
msgid ""
"```html\n"
"<template>\n"
"  <container>\n"
"    <text>The time is {{datetime}}</text>\n"
"    <text>{{title}}</text>\n"
"    <text>{{getTitle()}}</text>\n"
"  </container>\n"
"</template>\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:112
#, no-wrap
msgid ""
"<script>\n"
"  module.exports = {\n"
"    data: {\n"
"      title: 'Alibaba',\n"
"      datetime: null\n"
"    },\n"
"    methods: {\n"
"      getTitle: function () {\n"
"        return 'Weex Team'\n"
"      }\n"
"    },\n"
"    created: function() {\n"
"      this.datetime = new Date().toLocaleString()\n"
"    }\n"
"  }\n"
"</script>\n"
"```\n"
msgstr ""

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:114
#, no-wrap
msgid "This piece of `<script>` code will generate some component options and assign it to `module.exports`. The three text components above respectively shows the current datetime, 'Alibaba' and 'Weex Team'. The `data` in the `<script>` code stores component data which could be used for [data-binding](./data-binding.md) in the `<template>`. When data changes, the bound value will be updated automatically. Also it could be read and written by `this.x` in its methods.\n"
msgstr "上面`<script>`标签中定义了被赋值给 module.exports 的对象。其作用是让三个`<text>`标签显示当前时间,'Alibaba' 和 'Weex Team'。`<script>` 中的data存储可以用于在 `<template>` 标签中进行数据绑定的数据,  当这些数据变更时, 被进行了数据绑定的标签也会自动更新。 这些数据在`<script>`中的各个方法内可以通过`this.x`读写."

#. type: Bullet: '* '
#: /home/dev/download/weex/doc/syntax/main.md:116
msgid "[See component definitions references](../references/component-defs.md)"
msgstr "[参见 组件定义](../references/component-defs.md)"

#. type: Plain text
#: /home/dev/download/weex/doc/syntax/main.md:117
msgid "Next, let's have a look at [data-binding](./data-binding.md)."
msgstr "接下来，让我们看看[数据绑定](./data-binding.md)。"